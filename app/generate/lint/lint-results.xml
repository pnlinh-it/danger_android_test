<?xml version="1.0" encoding="UTF-8"?>
<issues format="6" by="lint 7.0.4">

    <issue
        id="OldTargetApi"
        severity="Error"
        message="Not targeting the latest versions of Android; compatibility modes apply. Consider testing and updating this version. Consult the android.os.Build.VERSION_CODES javadoc for details."
        category="Correctness"
        priority="6"
        summary="Target SDK attribute is not targeting latest version"
        explanation="When your application runs on a version of Android that is more recent than your `targetSdkVersion` specifies that it has been tested with, various compatibility modes kick in. This ensures that your application continues to work, but it may look out of place. For example, if the `targetSdkVersion` is less than 14, your app may get an option button in the UI.&#xA;&#xA;To fix this issue, set the `targetSdkVersion` to the highest available value. Then test your app to make sure everything works correctly. You may want to consult the compatibility notes to see what changes apply to each version you are adding support for: https://developer.android.com/reference/android/os/Build.VERSION_CODES.html as well as follow this guide:&#xA;https://developer.android.com/distribute/best-practices/develop/target-sdk.html"
        url="https://developer.android.com/distribute/best-practices/develop/target-sdk.html"
        urls="https://developer.android.com/distribute/best-practices/develop/target-sdk.html,https://developer.android.com/reference/android/os/Build.VERSION_CODES.html">
        <location
            file="/Users/pnlinh/Desktop/Dev/Android/danger_android_test/app/build.gradle"
            line="17"
            column="9"/>
    </issue>

    <issue
        id="FragmentTagUsage"
        severity="Error"
        message="Replace the &lt;fragment> tag with FragmentContainerView."
        category="Correctness"
        priority="5"
        summary="Use FragmentContainerView instead of the &lt;fragment> tag"
        explanation="FragmentContainerView replaces the &lt;fragment> tag as the preferred                 way of adding fragments via XML. Unlike the &lt;fragment> tag, FragmentContainerView                 uses a normal `FragmentTransaction` under the hood to add the initial fragment,                 allowing further FragmentTransaction operations on the FragmentContainerView                 and providing a consistent timing for lifecycle events."
        url="https://developer.android.com/reference/androidx/fragment/app/FragmentContainerView.html"
        urls="https://developer.android.com/reference/androidx/fragment/app/FragmentContainerView.html">
        <location
            file="/Users/pnlinh/Desktop/Dev/Android/danger_android_test/app/src/main/res/layout/content_main.xml"
            line="8"
            column="6"/>
    </issue>

    <issue
        id="AllowBackup"
        severity="Error"
        message="On SDK version 23 and up, your app data will be automatically backed up and restored on app install. Consider adding the attribute `android:fullBackupContent` to specify an `@xml` resource which configures which files to backup, or just set `android:fullBackupOnly=true`. More info: https://developer.android.com/guide/topics/data/autobackup"
        category="Security"
        priority="3"
        summary="AllowBackup/FullBackupContent Problems"
        explanation="The `allowBackup` attribute determines if an application&apos;s data can be backed up and restored. It is documented at https://developer.android.com/reference/android/R.attr.html#allowBackup&#xA;&#xA;By default, this flag is set to `true` which means application data can be backed up and restored by the OS. Setting `allowBackup=&quot;false&quot;` opts the application out of being backed up and so users can&apos;t restore data related to it when they go through the device setup wizard.&#xA;&#xA;Allowing backups may have security consequences for an application. Currently `adb backup` allows users who have enabled USB debugging to copy application data off of the device. Once backed up, all application data can be read by the user. `adb restore` allows creation of application data from a source specified by the user. Following a restore, applications should not assume that the data, file permissions, and directory permissions were created by the application itself.&#xA;&#xA;To fix this warning, decide whether your application should support backup, and explicitly set `android:allowBackup=(true|false)&quot;`.&#xA;&#xA;If not set to false, and if targeting API 23 or later, lint will also warn that you should set `android:fullBackupContent` or `android:fullBackupOnly` to configure auto backup."
        url="https://developer.android.com/guide/topics/data/autobackup"
        urls="https://developer.android.com/guide/topics/data/autobackup,https://developer.android.com/reference/android/R.attr.html#allowBackup">
        <location
            file="/Users/pnlinh/Desktop/Dev/Android/danger_android_test/app/src/main/AndroidManifest.xml"
            line="7"
            column="9"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Error"
        message="The resource `R.xml.backup_rules` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true.">
        <location
            file="/Users/pnlinh/Desktop/Dev/Android/danger_android_test/app/src/main/res/xml/backup_rules.xml"
            line="8"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Error"
        message="The resource `R.xml.data_extraction_rules` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true.">
        <location
            file="/Users/pnlinh/Desktop/Dev/Android/danger_android_test/app/src/main/res/xml/data_extraction_rules.xml"
            line="6"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Error"
        message="The resource `R.string.hello_second_fragment` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true.">
        <location
            file="/Users/pnlinh/Desktop/Dev/Android/danger_android_test/app/src/main/res/values/strings.xml"
            line="11"
            column="13"/>
    </issue>

    <issue
        id="UnusedIds"
        severity="Error"
        message="The resource `R.id.toolbar` appears to be unused"
        category="Performance"
        priority="1"
        summary="Unused id"
        explanation="This resource id definition appears not to be needed since it is not referenced from anywhere. Having id definitions, even if unused, is not necessarily a bad idea since they make working on layouts and menus easier, so there is not a strong reason to delete these.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true.">
        <location
            file="/Users/pnlinh/Desktop/Dev/Android/danger_android_test/app/src/main/res/layout/activity_main.xml"
            line="15"
            column="13"/>
    </issue>

    <issue
        id="UnusedIds"
        severity="Error"
        message="The resource `R.id.fab` appears to be unused"
        category="Performance"
        priority="1"
        summary="Unused id"
        explanation="This resource id definition appears not to be needed since it is not referenced from anywhere. Having id definitions, even if unused, is not necessarily a bad idea since they make working on layouts and menus easier, so there is not a strong reason to delete these.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true.">
        <location
            file="/Users/pnlinh/Desktop/Dev/Android/danger_android_test/app/src/main/res/layout/activity_main.xml"
            line="26"
            column="9"/>
    </issue>

    <issue
        id="UnusedIds"
        severity="Error"
        message="The resource `R.id.nav_graph` appears to be unused"
        category="Performance"
        priority="1"
        summary="Unused id"
        explanation="This resource id definition appears not to be needed since it is not referenced from anywhere. Having id definitions, even if unused, is not necessarily a bad idea since they make working on layouts and menus easier, so there is not a strong reason to delete these.&#xA;&#xA;The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.&#xA;&#xA;You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests=true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests=true.">
        <location
            file="/Users/pnlinh/Desktop/Dev/Android/danger_android_test/app/src/main/res/navigation/nav_graph.xml"
            line="5"
            column="5"/>
    </issue>

    <issue
        id="SelectableText"
        severity="Error"
        message="Consider making the text value selectable by specifying `android:textIsSelectable=&quot;true&quot;`"
        category="Usability"
        priority="7"
        summary="Dynamic text should probably be selectable"
        explanation="If a `&lt;TextView>` is used to display data, the user might want to copy that data and paste it elsewhere. To allow this, the `&lt;TextView>` should specify `android:textIsSelectable=&quot;true&quot;`.&#xA;&#xA;This lint check looks for TextViews which are likely to be displaying data: views whose text is set dynamically.">
        <location
            file="/Users/pnlinh/Desktop/Dev/Android/danger_android_test/app/src/main/res/layout/fragment_second.xml"
            line="9"
            column="6"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Error"
        message="Missing `contentDescription` attribute on image"
        category="Accessibility"
        priority="3"
        summary="Image without `contentDescription`"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.&#xA;&#xA;Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, just suppress the lint warning with a tools:ignore=&quot;ContentDescription&quot; attribute.&#xA;&#xA;Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`."
        url="https://developer.android.com/guide/topics/ui/accessibility/apps#special-cases"
        urls="https://developer.android.com/guide/topics/ui/accessibility/apps#special-cases">
        <location
            file="/Users/pnlinh/Desktop/Dev/Android/danger_android_test/app/src/main/res/layout/activity_main.xml"
            line="25"
            column="6"/>
    </issue>

</issues>
